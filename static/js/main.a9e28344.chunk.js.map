{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","title","message","length","firstPart","slice","secondPart","join","selectedItem","item","setState","prevState","removedItem","filter","good","getRelevantFunction","includes","clearButton","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,MAAQ,WACN,IACIC,EADIF,EAAkB,EAAKD,MAAvBC,cAWR,GAR6B,IAAzBA,EAAcG,SAChBD,EAAU,qBAGiB,IAAzBF,EAAcG,SAChBD,EAAO,UAAMF,EAAc,GAApB,iBAGLA,EAAcG,QAAU,EAAG,CAC7B,IAAMC,EAAYJ,EAAcK,MAAM,EAAGL,EAAcG,OAAS,GAC1DG,EAAaN,EAAcA,EAAcG,OAAS,GAExDD,EAAO,UAAME,EAAUG,KAAK,MAArB,gBAAkCD,EAAlC,iBAGT,OAAOJ,GAxBX,EA2BEM,aAAe,SAACC,GACd,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BX,cAAc,GAAD,mBAAMW,EAAUX,eAAhB,CAA+BS,SA7BlD,EAiCEG,YAAc,SAACH,GACb,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BX,cAAeW,EAAUX,cAAca,QAAO,SAAAC,GAAI,OAAIA,IAASL,UAnCrE,EAuCEM,oBAAsB,SAACN,GACjB,EAAKV,MAAMC,cAAcgB,SAASP,GACpC,EAAKG,YAAYH,GAEjB,EAAKD,aAAaC,IA3CxB,EA+CEQ,YAAc,WACZ,EAAKP,UAAS,iBAAO,CACnBV,cAAe,QAjDrB,4CAqDE,WAAU,IAAD,OACCA,EAAkBkB,KAAKnB,MAAvBC,cAER,OACE,sBAAKmB,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,GAAd,SACGD,KAAKjB,UAGPD,EAAcG,OAAS,GACtB,wBACEgB,UAAU,mBACVC,KAAK,SACLC,QAAS,kBAAM,EAAKJ,eAHtB,+BAUJ,oBAAIE,UAAU,uDAAd,SACGtB,EAAgByB,KAAI,SAAAR,GAAI,OACvB,sBAAKK,UAAWI,IAAW,iPAW3B,CAAE,wBAAyB,EAAKxB,MAAMC,cAAcgB,SAASF,KAX7D,UAaE,qBAEEK,UAAU,oBAFZ,UAIGL,EACA,MAJIA,GAOP,wBACEK,UAAU,wBACVC,KAAK,SACLC,QAAS,kBAAM,EAAKN,oBAAoBD,IAH1C,SAKGd,EAAcgB,SAASF,GACpB,SACA,0BAxGpB,GAAyBU,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a9e28344.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  title = () => {\n    const { selectedGoods } = this.state;\n    let message;\n\n    if (selectedGoods.length === 0) {\n      message = 'No goods selected';\n    }\n\n    if (selectedGoods.length === 1) {\n      message = `${selectedGoods[0]} is selected`;\n    }\n\n    if (selectedGoods.length >= 2) {\n      const firstPart = selectedGoods.slice(0, selectedGoods.length - 1);\n      const secondPart = selectedGoods[selectedGoods.length - 1];\n\n      message = `${firstPart.join(', ')} and ${secondPart} are selected`;\n    }\n\n    return message;\n  };\n\n  selectedItem = (item: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, item],\n    }));\n  };\n\n  removedItem = (item: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods.filter(good => good !== item),\n    }));\n  };\n\n  getRelevantFunction = (item: string) => {\n    if (this.state.selectedGoods.includes(item)) {\n      this.removedItem(item);\n    } else {\n      this.selectedItem(item);\n    }\n  };\n\n  clearButton = () => {\n    this.setState(() => ({\n      selectedGoods: [],\n    }));\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"container-sm\">\n        <div className=\"text-center\">\n          <h1 className=\"\">\n            {this.title()}\n          </h1>\n\n          {selectedGoods.length > 0 && (\n            <button\n              className=\"rounded border-0\"\n              type=\"button\"\n              onClick={() => this.clearButton()}\n            >\n              Clear the list\n            </button>\n          )}\n        </div>\n\n        <ul className=\"pt-5 row row-cols-auto d-flex justify-content-center\">\n          {goodsFromServer.map(good => (\n            <div className={classNames(`\n            col-6\n            d-flex\n            flex-column\n            justify-content-center\n            align-items-center\n            border\n            border-secondary\n            rounded\n            w-25\n            m-2`,\n            { 'bg-success text-light': this.state.selectedGoods.includes(good) })}\n            >\n              <li\n                key={good}\n                className=\"w-100 text-center\"\n              >\n                {good}\n                {' '}\n              </li>\n\n              <button\n                className=\"rounded border-0 my-2\"\n                type=\"button\"\n                onClick={() => this.getRelevantFunction(good)}\n              >\n                {selectedGoods.includes(good)\n                  ? 'Remove'\n                  : 'Select'}\n              </button>\n            </div>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}